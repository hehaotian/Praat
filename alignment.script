# Written by:   Haotian He	12/10/2010form Start	integer InputFile 1	integer Maxf0 350	integer Minf0 50	boolean Peak 0	boolean Pulse 1	boolean SaveFiles 1	boolean Pausing 1endformdirectory$ = "./"Create Strings as file list... list 'directory$'*.wavnumberOfFiles = Get number of stringsnumber = inputFilefor ifile from inputFile to numberOfFiles	select Strings list	fileName$ = Get string... ifile	call Windows 'fileName$'	number = number + 1endforprocedure Windows file_name$ file_extension$Read from file... 'directory$''file_name$'name$ = selected$ ("Sound")segmfile$ = name$+".interval"if fileReadable (segmfile$)	Read from file... 'directory$''name$'.intervalelse	To IntervalTier	Into TextGrid	Rename... 'name$'	select IntervalTier 'name$'	Remove	select TextGrid 'name$'endifplus Sound 'name$'Editif pulse	pulsefile$ = name$+".pulse"	if fileReadable (pulsefile$)		Read from file... 'directory$''name$'.pulse	else		select Sound 'name$'		if peak#			To PointProcess (periodic, peaks)... minf0 maxf0 yes no			To PointProcess (periodic, cc)... minf0 maxf0		else#			To PointProcess (periodic, peaks)... minf0 maxf0 no yes			To PointProcess (periodic, cc)... minf0 maxf0		endif	endif	plus Sound 'name$'	Editendifcall Save 'directory$' 'name$'select Sound 'name$'Removeendprocprocedure Save directory$ name$if pausing	pause Current file is 'number'.endif		select TextGrid 'name$'if saveFiles	Write to short text file... 'directory$''name$'.intervalendifRemoveif pulse	select PointProcess 'name$'	if saveFiles		Write to short text file... 'directory$''name$'.pulse		maxperiod = 1/minf0		To PitchTier... maxperiod		call Trimf0		Down to TableOfReal... Hertz		Write to headerless spreadsheet file... 'directory$''name$'.f0		plus PointProcess 'name$'		plus PitchTier 'name$'	endif	Removeendifendprocprocedure Trimf0	maxbump = 0.01	maxedge = 0.0	maxgap = 0.033	n = Get number of points		first = Get value at index... 1	second = Get value at index... 2	penult = Get value at index... n-1	last = Get value at index... n	tfirst = Get time from index... 1	tlast = Get time from index... n	for k from 1 to 3		call Trim	endfor	Remove point... 1	Add point... tfirst second + (first-second) / 1000	Remove point... n	Add point... tlast penult + (last-penult) / 1000endprocprocedure Trim	for i from 2 to n-1		tleft = Get time from index... i-1		tmid = Get time from index... i		tright = Get time from index... i+1		gap1 = tmid - tleft		gap2 = tright - tmid		left = Get value at index... i-1		mid = Get value at index... i		right = Get value at index... i+1		diff1 = mid - left		diff2 = mid - right		if diff1 > maxbump and diff2 > maxedge and gap1 < maxgap and gap2 < maxgap		... or diff2 > maxbump and diff1 > maxedge and gap1 < maxgap and gap2 < maxgap			Remove point... i			Add point... tmid left+(tmid-tleft)/(tright-tleft)*(right-left)		endif		if diff1 > maxbump and gap2 >= maxgap			Remove point... i			Add point... tmid left + maxbump		endif		if diff2 > maxbump and gap1 >= maxgap			Remove point... i			Add point... tmid right + maxbump		endif		diff1 = left - mid		diff2 = right - mid		if diff1 > maxbump and diff2 > maxedge and gap1 < maxgap and gap2 < maxgap		... or diff2 > maxbump and diff1 > maxedge and gap1 < maxgap and gap2 < maxgap			Remove point... i			Add point... tmid left+(tmid-tleft)/(tright-tleft)*(right-left)		endif		if diff1 > maxbump and gap2 >= maxgap			Remove point... i			Add point... tmid left - maxbump		endif		if diff2 > maxbump and gap1 >= maxgap			Remove point... i			Add point... tmid right - maxbump		endif	endforendproc